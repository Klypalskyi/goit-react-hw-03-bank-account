{"version":3,"sources":["components/App/App.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Balance/Balance.module.css","components/Controls/Controls.module.css","components/TransactionHistory/TransactionHistory.jsx","components/Controls/Controls.jsx","components/Balance/Balance.jsx","components/Dashboard/Dashboard.jsx","components/App/App.jsx","index.js"],"names":["module","exports","TransactionHistory","transactions","className","styles","history","map","transaction","key","id","type","amount","date","Controls","createTransaction","inputChange","controls","value","input","name","placeholder","onChange","button","onClick","Balance","balance","deposit","withdraw","balanceBox","depositBox","depositArrow","withdrawBox","withdrawArrow","total","defaultProps","shortid","require","toastOptions","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","Dashboard","state","totalDeposit","totalWithdraw","target","newAmount","toast","error","generate","Date","toLocaleString","setState","prev","localStorage","setItem","JSON","stringify","parse","getItem","filter","reduce","acc","this","newestOnTop","rtl","pauseOnVisibilityChange","Component","App","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.41899b1a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskContainer\":\"App_taskContainer__ZxjhY\",\"dFlex\":\"App_dFlex__2Kv_R\",\"bgGrey\":\"App_bgGrey__1eUCS\",\"title\":\"App_title__1dYOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__3SHs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balanceBox\":\"Balance_balanceBox__3Ksfd\",\"depositArrow\":\"Balance_depositArrow__Z0poZ\",\"withdrawArrow\":\"Balance_withdrawArrow__2rabd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__1UKs5\",\"button\":\"Controls_button__PJbH0\",\"input\":\"Controls_input__3r5h8\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ transactions }) => (\n  <table className={styles.history}>\n    <thead>\n      <tr>\n        <th>Transaction</th>\n        <th>Amount</th>\n        <th>Date</th>\n      </tr>\n    </thead>\n    <tbody>\n      {transactions.map(transaction => (\n        <tr key={transaction.id}>\n          <td>{transaction.type}</td>\n          <td>{transaction.amount}$</td>\n          <td>{transaction.date}</td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      date: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Controls.module.css';\n\nconst Controls = ({ amount, createTransaction, inputChange }) => (\n  <section className={styles.controls}>\n    <input\n      type=\"number\"\n      value={amount}\n      className={styles.input}\n      name=\"amount\"\n      placeholder=\"Enter your amount\"\n      onChange={inputChange}\n    />\n    <button\n      type=\"button\"\n      value=\"Deposit\"\n      name=\"Deposit\"\n      className={styles.button}\n      onClick={createTransaction}\n    >\n      Deposit\n    </button>\n    <button\n      type=\"button\"\n      value=\"Withdraw\"\n      name=\"Withdraw\"\n      className={styles.button}\n      onClick={createTransaction}\n    >\n      Withdraw\n    </button>\n  </section>\n);\n\nControls.propTypes = {\n  amount: PropTypes.string.isRequired,\n  createTransaction: PropTypes.func.isRequired,\n  inputChange: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Balance.module.css';\n\nconst Balance = ({ balance, deposit, withdraw }) => (\n  <div className={styles.balanceBox}>\n    <div className={styles.depositBox}>\n      <span className={styles.depositArrow}>&uarr;</span> {deposit}$\n    </div>\n    <div className={styles.withdrawBox}>\n      <span className={styles.withdrawArrow}>&darr;</span> {withdraw}$\n    </div>\n    <div className={styles.total}>Balance: {balance}$</div>\n  </div>\n);\n\nBalance.propTypes = {\n  balance: PropTypes.number,\n  deposit: PropTypes.number,\n  withdraw: PropTypes.number,\n};\n\nBalance.defaultProps = {\n  balance: 0,\n  deposit: 0,\n  withdraw: 0,\n};\n\nexport default Balance;\n","import React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst shortid = require('shortid');\n\nconst toastOptions = {\n  position: 'bottom-right',\n  autoClose: 2000,\n  hideProgressBar: true,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n};\n\nclass Dashboard extends Component {\n  state = {\n    amount: '',\n    transactions: [],\n    totalDeposit: 0,\n    totalWithdraw: 0,\n  };\n\n  componentDidMount() {\n    if (localStorage.transactions) {\n      const transactions = JSON.parse(localStorage.getItem('transactions'));\n      const totalDeposit = [...transactions]\n        .filter(transaction => transaction.type === 'Deposit')\n        .reduce((acc, transaction) => acc + transaction.amount, 0);\n      const totalWithdraw = [...transactions]\n        .filter(transaction => transaction.type === 'Withdraw')\n        .reduce((acc, transaction) => acc + transaction.amount, 0);\n      const balance = totalDeposit - totalWithdraw;\n      this.setState({\n        transactions,\n        totalDeposit,\n        totalWithdraw,\n        balance,\n      });\n    }\n  }\n\n  createTransaction = ({ target }) => {\n    const { amount } = this.state;\n    const newAmount = +amount;\n    if (newAmount <= 0) {\n      toast.error('Amount must be more then 0', toastOptions);\n    } else {\n      const transaction = {\n        id: shortid.generate(),\n        type: target.name,\n        amount: newAmount,\n        date: new Date().toLocaleString(),\n      };\n      this.setState(\n        prev => ({\n          id: '',\n          type: '',\n          amount: '',\n          date: '',\n          transactions: [...prev.transactions, transaction],\n        }),\n        () =>\n          localStorage.setItem(\n            'transactions',\n            JSON.stringify(this.state.transactions),\n          ),\n      );\n      if (transaction.type === 'Deposit') {\n        this.setState(prev => ({\n          totalDeposit: prev.totalDeposit + transaction.amount,\n          balance: prev.totalDeposit + transaction.amount - prev.totalWithdraw,\n        }));\n      }\n      if (transaction.type === 'Withdraw') {\n        this.setState(prev => ({\n          totalWithdraw: prev.totalWithdraw + transaction.amount,\n          balance: prev.totalDeposit - transaction.amount - prev.totalWithdraw,\n        }));\n      }\n    }\n  };\n\n  inputChange = ({ target }) => {\n    const { value, name } = target;\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    const {\n      totalDeposit,\n      balance,\n      totalWithdraw,\n      transactions,\n      amount,\n    } = this.state;\n    return (\n      <div className=\"DashboardWrapper\">\n        <Controls\n          amount={amount}\n          inputChange={this.inputChange}\n          createTransaction={this.createTransaction}\n        />\n        <Balance\n          balance={balance}\n          deposit={totalDeposit}\n          withdraw={totalWithdraw}\n        />\n        <TransactionHistory transactions={transactions} />\n        <ToastContainer\n          position=\"bottom-right\"\n          autoClose={2000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport styles from './App.module.css';\nimport Dashboard from '../Dashboard/Dashboard';\n\nconst App = () => (\n  <div className={styles.container}>\n    <Dashboard />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}